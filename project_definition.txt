Agreement for AI-Powered Chatbot dated 2025-03-29
Project Plan for AI-Powered Chatbot Integration with WordPress
1.	Project Overview

a.	The goal is to develop an AI-powered chatbot integrated into the customer's WordPress website. The chatbot will utilize a Retrieval-Augmented Generation (RAG) system to provide accurate and contextually relevant responses based on the knowledge base.
2.	Technical Stack

a.	Frontend: JavaScript (for user interface interactions)
b.	Backend: Python with RAG architecture
c.	WordPress Integration: Utilize a WordPress plugin to facilitate communication between the WordPress site and the Python backend via API calls.
3.	WordPress Setup

a.	We will Select an appropriate plugin for integrating external APIs into WordPress, such as WP REST API or a custom plugin option.

4.	Development Process

a.	Backend Development:
■	We will Set up a Python environment with necessary libraries for implementing the RAG architecture.
■	Will Develop RESTful APIs that will handle requests from the WordPress plugin, process input, and return chatbot responses.
■	Will Integrate a knowledge base that the RAG system will utilize for generating responses.
■	Node.js with Express.js (or NestJS for better modularity)
b.	Frontend Development:
■	Create a user-friendly chatbot interface using JavaScript that will reside on the WordPress site.
■	Ensure the interface can send user queries to the backend API and display responses dynamically.
■	Frontend: React or Next.js (for chatbot UI)
5.	Integration and Testing

a.	Integrate the chatbot interface with the WordPress site using the chosen plugin.
b.	Test the entire flow, from user interaction on the frontend to response generation in the backend, ensuring all components communicate effectively.
c.	Conduct user acceptance testing to gather feedback and make necessary adjustments.
6.	Deployment and Monitoring

a.	Deploy the chatbot and backend system to the production environment.
b.	Monitor performance and user interactions to address any issues and improve the system over time.
7.	Documentation and Support

a.	Provide comprehensive documentation on how the system works, including installation, configuration, and troubleshooting steps.
b.	Offer ongoing support for the customer to ensure the chatbot remains effective and up-to-date.
Other technical notes:


AI/LLM: OpenAI GPT, Google Gemini, or a custom NLP model (fine-tuned on Hostinger data)
Natural language processing (NLP) combines computational linguistics, machine learning, and deep learning models to process human language. Computational linguistics. Computational linguistics is the science of understanding and constructing human language models with computers and software tools.
The four types of Natural Language Processing (NLP) are:
•	Natural Language Understanding (NLU)
•	Natural Language Generation (NLG)
•	Natural Language Processing (NLP) itself, which encompasses both NLU and NLG.
•	Natural Language Interaction (NLI)


Database: PostgreSQL or MongoDB for storing conversation history

Voice Recognition: Whisper API or Google Speech-to-Text

Authentication: JWT for session handling

Hosting: Hostinger with (if needed) AWS, Vercel, Firebase

Architecture:

1. User Interaction: Users will interact with the chatbot via text or voice.


2. NLP Processing: Messages will go through an NLP model to understand intent.


3. Database Querying: AI fetches relevant data from Hostinger’s / WordPress WooCommerce product/services database and standard WooCommerce REST API - https://woocommerce.com/document/woocommerce-rest-api/ - https://www.youtube.com/watch?v=YJj2edx0ZFs


4. Response Generation: AI formulates a human-like response.


5. Human Handoff: If AI confidence is low, transfer to a human agent.


6. External API Calls: If the user requests calendar events or reminders, the chatbot communicates with external APIs.

Sample: https://drive.google.com/file/d/16qCUBDiKGwqaG3ultmVV-b34dDp_W_ha/view?usp=sharing - DemoAI Virtual Assistant - Made with Clipchamp (1) (1).mp4

Hostinger model / requirements from project description:

 
 


 

Support bot – AI powered - with advanced Options to:
-	Take control of conversation by a human operator
-	Use advanced AI powered technology using our products and services database to assist customer in their searches / issues / problem solving / advices
-	Option to be integrated with additional software like customer calendar to add events and reminders in calendar and in personal shopping list – like Amazon Alexa is doing
-	Option to be integrated with voice to text in order to accept voice commands in English plus other languages
-	Website to be integrated: www.vogo.family 


Main Test scenario:
Note: All scenarios should be performed on mobile and on desktop

1.	Access www.vogo.family
2.	Acces AI NLP Powered ChatBot
3.	Ask chatbot via text message in english: I need a autoservice in my location
4.	ChatBot ask: What is your issue
5.	User: I have a break problem
6.	ChatBot: Here are services located near your location: Service one – link to service and service 2 – link to product
7.	User – make me a schedule
8.	ChatBot: When
9.	User now/today/tomorrow/day after tomorrow/April 5
10.	ChatBot: What hour
11.	User: 10 AM
12.	Chatbot: I will add that to your calendar
13.	Actions:
a.	Add to user calendar
b.	Send a email to: reservations@vogo.family
c.	Add a tichet into ticketing system
d.	Manual take-over of the conversation by a human operator

Alternative Test scenario 1:

1.	Access www.vogo.family
2.	Acces AI NLP Powered ChatBot
3.	Ask chatbot via voice message in english: I need a autoservice in my location
4.	ChatBot ask: What is your issue /text and voice
5.	User: I have a break problem
6.	ChatBot: Here are services located near your location: Service one – link to service and service 2 – link to product
7.	User – make me a schedule
8.	ChatBot: When  /text and voice
9.	User now/today/tomorrow/day after tomorrow/April 5
10.	ChatBot: What hour  /text and voice
11.	User: 10 AM
12.	Chatbot: I will add that to your calendar
13.	Actions:
a.	Add to user calendar
b.	Send a email to: reservations@vogo.family
c.	Add a tichet into ticketing system
d.	Manual take-over of the conversation by a human operator

Alternative Test scenario 2:

1.	Access www.vogo.family
2.	All steps like in Main test scenario but in language: Romanian

Alternative Test scenario 3:

1.	Access www.vogo.family
2.	All steps like in Alternative test scenario 1 but in language: Romanian

Alternative Test scenario 4:

1.	Access www.vogo.family
2.	Like in Main test scenario but using usecases bello
3.	Voice and text in English, French and Romanian language
4.	Use cases
4.1 Add an event in calendar
4.2 Add items / products and services on my shopping list
4.3 Search a restaurant in my location
4.4 Order food


Milestones plan:

1.	Milestone 1
Title: Backend setup and first demo version
Estimated Duration: 10% 
Value: 10%
Dependencies: Project startup

2.	Milestone 2

Title: Second app version, including source code in Beneficiary GitHub with code comments standards and naming conventions
Estimated Duration: 10%
Value: 10%
Dependencies: Milestone 1 completed and accepted + released


3.	Milestone 3

Title: Third app version – half of main scenario
Estimated Duration: 10%
Value: 10%
Dependencies: Milestone 2 completed and accepted + released

4.	Milestone 4

Title: 4th app version – main scenario 
Estimated Duration: 10%
Value: 10%
Dependencies: Milestone 3 completed and accepted + released



5.	Milestone 5

Title: 5th app version - Alternative Test scenario 1 and assistance to publish in google store
Estimated Duration: 10%
Value: 10%
Dependencies: Milestone 4 completed and accepted + released

6.	Milestone 6

Title: 6th app version - Alternative Test scenario 2 and assistance to publish in apple store
Estimated Duration: 10%
Value: 10%
Dependencies: Milestone 5 completed and accepted + released

7.	Milestone 7

Title: 7th app version - Alternative Test scenario 3
Estimated Duration: 10%
Value: 10%
Dependencies: Milestone 6 completed and accepted + released

8.	Milestone 8

Title: 8th app version - Alternative Test scenario 4
Estimated Duration: 10%
Value: 10%
Dependencies: Milestone 7 completed and accepted + released

9.	Milestone 9

Title: Full requirements conformity matrix delivery
Estimated Duration: 10%
Value: 10%
Dependencies: Milestone 8 completed and accepted + released

10.	Milestone 10

Title: Documentation – technical and user guide
Estimated Duration: 10%
Value: 10%
Dependencies: Milestone 9 completed and accepted + released

Each milestone will be created when their dependencies are fulfilled.

Estimated Total Duration:20 days
Project value (USD): 800$
Username for test account creation to grant access to www.vogo.family ( create test / dev account here): https://vogo.family/register/ : devchatbot9
